# Sample makefile for nrts_tap based client

CC     = cc 
INCDIR = datasock/qlib
#INCDIR =  ../vdl
BINDIR = ../bin/$(PLATFORM)
QLIB = datasock/qlib/libqlib.a
#QLIB = /export/home/distrib/qlib/libqlib.a
LIBDIR = ../vdl
OPTMIZ = -O
INCS   = -I$(INCDIR)
OSNAME = SOLARIS
OSNAME2 = SOLARIS2
CFLAGS = $(OPTMIZ) $(INCS) -L$(LIBDIR) -D$(OSNAME) -D$(OSNAME2)
ALL    = vdltap vdl 

all: $(ALL)


remove: FORCE
	rm $(ALL)

clean: FORCE

FORCE:
test: test.o
	$(CC) $(CFLAGS) test.c -o test -lm
test.o: test.c
	$(CC) $(CFLAGS) test.c -c
#
#	TT test
#
nsnrcvtt: nsnrcvtt.o
	$(CC) $(CFLAGS) -DMAIN nsnrcvtt.c -c
	$(CC) $(CFLAGS) nsnrcvtt.o -o nsnrcvtt -lm
	rm nsnrcvtt.o
#
#	VDL Berkeley - Data Sockets
#
vdlnev:  vdl.o vdltrg.o vdlput.o vdlqsub.o ifft512.o ifft1024.o ifft256.o fftlib.o cmprs.o vdltcp.o vdlfilt.o filt5.o filtheli.o filt2.o filt10.o feedme.o feedme_test_null.o $(QLIB)
	 makedate
	$(CC) $(CFLAGS)  datetime.c -c
	$(CC) $(CFLAGS)  vdl.o vdltrg.o vdlput.o feedme.o feedme_test_null.o vdlqsub.o ifft256.o ifft512.o ifft1024.o fftlib.o cmprs.o vdltcp.o datetime.o vdlfilt.o filt5.o filtheli.o filt2.o filt10.o $(QLIB) -o vdlnev -lsunmath -lm
#
#	VDL Berkeley - Data Sockets
#
vdlnevtcp:  vdl.o vdltrg.o vdlput.o vdlqsub.o ifft512.o ifft1024.o ifft256.o fftlib.o cmprs.o vdltcp_null.o vdlfilt.o filt5.o filtheli.o filt2.o filt10.o feedme.o feedme_test_null.o $(QLIB)
	 makedate
	$(CC) $(CFLAGS)  datetime.c -c
	$(CC) $(CFLAGS)  vdl.o vdltrg.o vdlput.o feedme.o feedme_test_null.o vdlqsub.o ifft256.o ifft512.o ifft1024.o fftlib.o cmprs.o vdltcp_null.o datetime.o vdlfilt.o filt5.o filtheli.o filt2.o filt10.o $(QLIB) -o vdlnevtcp -lsunmath -lm
feedme.o: feedme.c vdl.h 
	$(CC) $(CFLAGS) feedme.c -c
feedme_test_null.o: feedme_test_null.c vdl.h
	$(CC) $(CFLAGS) feedme_test_null.c -c
#
#   VDL
#
vdl.o: vdl.c vdl.h vdlgbl.h cmprs.h ifft.h vdlqsub.h
	$(CC) $(CFLAGS) vdl.c -c
vdltrg.o: vdltrg.c vdl.h vdlgbl.h cmprs.h ifft.h vdlqsub.h
	$(CC) $(CFLAGS) vdltrg.c -c
vdlput.o: vdlput.c vdl.h vdlgbl.h cmprs.h ifft.h vdlqsub.h
	$(CC) $(CFLAGS) vdlput.c -c
vdlqsub.o: vdlqsub.c vdl.h vdlqsub.h vdlgbl.h
	$(CC) $(CFLAGS) vdlqsub.c -c
vdltcp.o: vdltcp.c vdlgbl.h vdl.h
	$(CC) $(CFLAGS) vdltcp.c -c
vdltcp_null.o: vdltcp_null.c vdlgbl.h vdl.h
	$(CC) $(CFLAGS) vdltcp_null.c -c
ifft256.o: ifft256.c ifft.h
	$(CC) $(CFLAGS) ifft256.c -c
ifft512.o: ifft512.c ifft.h
	$(CC) $(CFLAGS) ifft512.c -c
ifft1024.o: ifft1024.c ifft.h
	$(CC) $(CFLAGS) ifft1024.c -c
fftlib.o: fftlib.c ifft.h
	$(CC) $(CFLAGS) fftlib.c -c
filt2.o: filt2.c vdlfilt.h 
	$(CC) $(CFLAGS) filt2.c -c
filt5.o: filt5.c vdlfilt.h 
	$(CC) $(CFLAGS) filt5.c -c
filt10.o: filt10.c vdlfilt.h 
	$(CC) $(CFLAGS) filt10.c -c
filtheli.o: filtheli.c vdlfilt.h 
	$(CC) $(CFLAGS) filtheli.c -c
vdlfilt.o: vdlfilt.c vdlfilt.h 
	$(CC) $(CFLAGS) vdlfilt.c -c
#
#	VDLMOM -build
#
vdlmom: vdlmom.o
	$(CC) $(CFLAGS) vdlmom.o -o vdlmom -lm
vdlmom.o: vdlmom.c
	$(CC) $(CFLAGS) vdlmom.c -c

#
#	vdlpass - Handle a serial port with USNSN protocol
#
vdlpass: vdlpass.o nsnrcvtt.o vdltcp.o
	$(CC) $(CFLAGS) vdlpass.o nsnrcvtt.o vdltcp.o -o vdlpass -lnsl -lm -lsocket
vdlpass.o: vdlpass.c
	$(CC) $(CFLAGS) vdlpass.c -c
nsnrcvtt.o: nsnrcvtt.c
	$(CC) $(CFLAGS) nsnrcvtt.c -c
